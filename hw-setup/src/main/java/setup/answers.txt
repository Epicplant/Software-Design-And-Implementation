## CSE 331 hw-setup Questions
## Part 6

1. Why did Fibonacci fail the testThrowsIllegalArgumentException < test? What (if anything) did
you have to do to fix it? If you did not have to change anything to fix this issue, explain why.

Answer: The fibonacci sequence we use has its first digit (1) be indexed at 0, and then we build up from there.
As a result, indexes 0 and 1 will be the values 1 and 1. However, since fibonacci threw an illegalargumentexception
whenever n equals 0 instead of returning the value at index 0 (1), we were throwing an error when we shouldn't.
As a result, changing n <= 0 to n < 0 solved this particular problem since then 0 is no longer consider negative
and is considered a real index.


2. Why did Fibonacci fail the testBaseCase test? What (if anything) did you have to do to fix
it? If you did not have to change anything to fix this issue, explain why.

Answer: Same reason as in part 1. 0 is an index and also the base case of the fibonacci sequence since it contains
the smallest possible value in the fibonacci sequence (1). Once n <= 0 changed to n<0, the base case worked properly again
since getFibTerm(n-2) can now equal 0 without getting an error (happens when n=2).



3.Why did Fibonacci fail the testInductiveCase test? What (if anything) did you have to do to
fix it? If you did not have to change anything to fix this issue, explain why.

Answer: To begin, the base cases should be < 2 not <= 2. Since we are recursively doing getFibTerm(n-1)
 and getFibTerm(n-2) every step, we need to have 2 base cases: n = 0 and n = 1 (since when this happens
 we are unable to both subtract by n - 2 and n-1). With the base case previously being conditioned on <= 2, the
 base cases were actually n = 0, n = 1, and n = 2 meaning we got the third index of fibonacci sequence equaling
 1 instead of 2 which was one of the reasons the inductive test was breaking. Secondly, getFibTerm was subtracting
 fibonacci sequence terms rather than adding them. For example, if we started of getFibTerm(2), then we would have
 1 - 1 = 0 instead of 1 + 1 = 2. By changing the code so that getFibTerm(n-1) - getFibTerm(n-2) becomes
 getFibTerm(n-1) + getFibTerm(n-2), we fix this issue and resolve the inductive error.

